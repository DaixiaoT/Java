import java.util.*;
import java.sql.*;

//封装dai表中的数据
class Dai {
	private int id;
	private String name;
	private int pwd;
	private String playboy;


	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return this.name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getPwd() {
		return pwd;
	}
	public void setPwd(int pwd) {
		this.pwd = pwd;
	}
	public String getPlayboy() {
		return this.playboy;
	}
	public void setPlayboy(String playboy) {
		this.playboy = playboy;
	}
	public String toString() {
		return "dai{" + id + ",name=" + name +",pwd="+
		       pwd+",playboy="+playboy+'}'+"\n";
	}


}


//定义一个方法，查询dai表中的数据将其封装为对象，然后装载集合，返回。
public class daiDemo {

	public static void main(String[] args) {
		List<Dai> list = new daiDemo().findAll();
		System.out.println(list);
	}



	//查询所有dai对象
	public List<Dai> findAll() {
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		List<Dai> list = null;
		try {
			//1.注册驱动
			Class.forName("com.mysql.jdbc.Driver");
			//2.获取连接
			conn = DriverManager.getConnection("jdbc:mysql:///daixiaotao","root","962464");
			//3.定义sql
			String sql = "select * from dai";
			//4.获取执行sql的对象
			stmt = conn.createStatement();
			//执行sql
			rs = stmt.executeQuery(sql);
			Dai dai = null;
			list = new ArrayList<Dai>();
			//6.遍历结果集，封装对象，装载集合
			while(rs.next()) {
				//获取数据
				int id = rs.getInt(1);
				String name = rs.getString(2);
				int pwd = rs.getInt(3);
				String playboy = rs.getString(4);
				//创建Dai对象，并赋值
				dai = new Dai();
				dai.setId(id);
				dai.setName(name);
				dai.setPwd(pwd);
				dai.setPlayboy(playboy);
				//装载集合
				list.add(dai);
			}
		} catch(ClassNotFoundException e) {
			e.printStackTrace();
		} catch(SQLException e) {
			e.printStackTrace();
		} finally {
			if(rs!=null) {
				try {
					rs.close();
				} catch(SQLException e) {
					e.printStackTrace();
				}
			}
			if(conn!=null) {
				try {
					conn.close();
				} catch(SQLException e) {
					e.printStackTrace();
				}
			}
			if(stmt!=null) {
				try {
					stmt.close();
				} catch(SQLException e) {
					e.printStackTrace();
				}
			}
		}

		return list;
	}


}
